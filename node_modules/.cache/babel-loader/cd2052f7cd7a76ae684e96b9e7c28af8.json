{"ast":null,"code":"var _jsxFileName = \"/mnt/001A831F1A831138/D/Tensorflow-JS/Hand_Landmark/hand-landmarks-app/src/App.js\",\n    _s = $RefreshSig$();\n\n// 1. Install Dependencies\n// 2. Import Libraries\n// 3. Setup webcam and canvas\n// 4. Define references to those\n// 5. Load handpose\n// 6. Detect function\n// 7. Drawing utilities from tensorflow\n// 8. Draw functions\nimport React, { useRef } from 'react';\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from '@tensorflow-models/handpose';\nimport Webcam from 'react-webcam'; //import logo from './logo.svg';\n\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const runHandpose = async () => {\n    const net = handpose.load();\n    console.log(\"Handpose model loaded\"); //Loop and detect hands\n\n    setInterval(() => {\n      detect(net);\n    }, 100);\n  };\n\n  const detect = async net => {\n    //Check data is available\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get video properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video height and width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Set canvas height and width\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight; // Make Detections\n\n      const hand = await net.estimateHands(video);\n      console.log(hand); // Draw mesh\n    }\n  };\n\n  runHandpose();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: 'absolute',\n          marginLeft: \"auto\",\n          marginRight: 'auto',\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zIndex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: 'absolute',\n          marginLeft: \"auto\",\n          marginRight: 'auto',\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zIndex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"AwQWgsmsPhWgADiRou0jnDEtoH4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/mnt/001A831F1A831138/D/Tensorflow-JS/Hand_Landmark/hand-landmarks-app/src/App.js"],"names":["React","useRef","tf","handpose","Webcam","App","webcamRef","canvasRef","runHandpose","net","load","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","hand","estimateHands","position","marginLeft","marginRight","left","right","textAlign","zIndex"],"mappings":"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","sourcesContent":["// 1. Install Dependencies\n// 2. Import Libraries\n// 3. Setup webcam and canvas\n// 4. Define references to those\n// 5. Load handpose\n// 6. Detect function\n// 7. Drawing utilities from tensorflow\n// 8. Draw functions\n\nimport React, {useRef} from 'react';\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from '@tensorflow-models/handpose';\nimport Webcam from 'react-webcam';\n\n//import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const runHandpose = async() => {\n    const net = handpose.load();\n    console.log(\"Handpose model loaded\");\n    //Loop and detect hands\n\n    setInterval(() => {\n      detect(net);\n    }, 100);\n  };\n  \n  const detect = async(net) =>{\n    //Check data is available\n    if (\n      typeof webcamRef.current!== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4 )\n    {\n      // Get video properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n    // Set video height and width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n    // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n    // Make Detections\n    const hand = await net.estimateHands(video);\n      console.log(hand);\n    // Draw mesh\n    }\n    \n  }\n  runHandpose();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam \n        ref={webcamRef}\n        style={{\n            position:'absolute',\n            marginLeft:\"auto\",\n            marginRight:'auto',\n            left:0,\n            right:0,\n            textAlign:\"center\",\n            zIndex:9,\n            width:640,\n            height:480,\n          }}\n        />\n        <canvas\n          ref={canvasRef}\n          style={{\n              position:'absolute',\n              marginLeft:\"auto\",\n              marginRight:'auto',\n              left:0,\n              right:0,\n              textAlign:\"center\",\n              zIndex:9,\n              width:640,\n              height:480,\n            }}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}